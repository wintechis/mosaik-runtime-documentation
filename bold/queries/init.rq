PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX arena: <https://solid.ti.rw.fau.de/public/ns/arena#>
PREFIX sim: <http://ti.rw.fau.de/sim#>
PREFIX log: <http://www.w3.org/2000/10/swap/log#>

# Create random position for tranporters and add tile
DELETE {
} INSERT {
    GRAPH ?transporter {
        ?transporter arena:locationX ?posX ;
            arena:locationY ?posY ;
            arena:successfulMov 0 ;
            arena:discardedTasksBlocked 0 ;
            arena:discardedTasksInvalid 0 ;
            arena:tile ?tile .
    }
} WHERE {
    ?transporter a arena:Transporter .

    ?shopfloor a arena:Shopfloor ;
        arena:sizeX ?sizeX ;
        arena:sizeY ?sizeY .

    BIND(xsd:integer(FLOOR(sim:rand(?transporter)*?sizeX)) AS ?posX)
    BIND(xsd:integer(FLOOR(sim:rand(?transporter)*?sizeY)) AS ?posY)

    BIND(URI(CONCAT("/shopfloor/",xsd:string(?posX),"/",xsd:string(?posY))) AS ?tile)
};

# Create initial stigmergy marker for all shopfloor tiles
DELETE {
} INSERT {
    GRAPH ?tile {
        ?tile a arena:Tile ;
            arena:marker ?markerRed, ?markerGreen, ?markerYellow, ?markerBlue ;
            arena:occupiedBy arena:nil . 
    }
    GRAPH ?markerRed {
        ?markerRed a arena:Marker ;
            arena:color arena:red ;
            arena:value 1000 .
    }
    GRAPH ?markerGreen {
        ?markerGreen a arena:Marker ;
            arena:color arena:green ;
            arena:value 1000 .
    }
    GRAPH ?markerYellow {
        ?markerYellow a arena:Marker ;
            arena:color arena:yellow ;
            arena:value 1000 .
    }
    GRAPH ?markerBlue {
        ?markerBlue a arena:Marker ;
            arena:color arena:blue ;
            arena:value 1000 .
    }
} WHERE {
    VALUES (?x) {
        (0)
        (1)
        (2)
        (3)
        (4)
        (5)
        (6)
#        (7)
#        (8)
#        (9)
#        (10)
#        (11)
#        (12)
#        (13)
#        (14)
#        (15)
#        (16)
#        (17)
#        (18)
#        (19)
#        (20)
#        (21)
#        (22)
#        (23)
#        (24)
    }
    VALUES (?y) {
        (0)
        (1)
        (2)
        (3)
        (4)
        (5)
        (6)
#        (7)
#        (8)
#        (9)
#        (10)
#        (11)
#        (12)
#        (13)
#        (14)
#        (15)
#        (16)
#        (17)
#        (18)
#        (19)
#        (20)
#        (21)
#        (22)
#        (23)
#        (24)
    }

    BIND(URI(CONCAT("/shopfloor/",xsd:string(?x),"/",xsd:string(?y))) AS ?tile)
    BIND(URI(CONCAT("/shopfloor/",xsd:string(?x),"/",xsd:string(?y),"/markers/red")) AS ?markerRed)
    BIND(URI(CONCAT("/shopfloor/",xsd:string(?x),"/",xsd:string(?y),"/markers/green")) AS ?markerGreen)
    BIND(URI(CONCAT("/shopfloor/",xsd:string(?x),"/",xsd:string(?y),"/markers/blue")) AS ?markerBlue)
    BIND(URI(CONCAT("/shopfloor/",xsd:string(?x),"/",xsd:string(?y),"/markers/yellow")) AS ?markerYellow)
};
