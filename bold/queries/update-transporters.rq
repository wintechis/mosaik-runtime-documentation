PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ldp: <http://www.w3.org/ns/ldp#>
PREFIX arena: <https://solid.ti.rw.fau.de/public/ns/arena#>
PREFIX sim: <http://ti.rw.fau.de/sim#>

# Transporter moves to a given, free, adjacent goal tile
#DELETE {
#    GRAPH ?transporter {
#        ?transporter arena:locationX ?x ;
#            arena:locationY ?y ;
#            arena:tile ?t .
#    }
#    GRAPH ?taskContainer {
#        ?taskContainer ldp:contains ?o .
#    }
#} INSERT {
#    GRAPH ?transporter {
#        ?transporter arena:locationX ?newX ;
#            arena:locationY ?newY ;
#            arena:tile ?goalTile .
#    }
#} WHERE {
#    ?transporter a arena:Transporter ;
#        arena:status arena:busy ;
#        arena:locationX ?x ;
#        arena:locationY ?y ;
#        arena:tile ?t ;
#        ?direction ?goalTile .
# 
#    # As multiple tasks could have been received, the transporter draws ONE random task from the container and tries to execute it
#    {   
#        SELECT ?taskContainer ?o ?transporter ?goalTile
#        WHERE {
#            ?taskContainer ldp:contains ?o .
#            {
#                SELECT ?transporter ?goalTile ?taskContainer
#                WHERE {
#                    ?transporter arena:tasks ?taskContainer .
#                    ?taskContainer ldp:contains ?task .
#
#                    GRAPH ?task{
#                        ?someTask a arena:TransporterTask ;
#                            rdf:value ?goalTile .
#                    }
#                }
#                ORDER BY RAND()
#                LIMIT 1
#            }
#        }
#    }
#
#    # Check if goal tile is not already occupied by other transporter
#    FILTER NOT EXISTS {
#      #TODO
#    }
#
#    # Check if goal tile is inside boundaries
#    FILTER(#TODO)
#
#    FILTER(#TODO)
#
#    ?shopfloor a arena:Shopfloor ;
#      #TODO
#
#    # Calculate new coordinates from URI of goal tile
#    BIND(xsd:integer(REPLACE(STR(?goalTile), "^(?:http)|(?:https)?://.*/shopfloor/(\\d+)/\\d+", "$1")) AS ?newX)
#    BIND(xsd:integer(REPLACE(STR(?goalTile), "^(?:http)|(?:https)?://.*/shopfloor/\\d+/(\\d+)", "$1")) AS ?newY)
#};
